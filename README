# 🧬 Breast Cancer Classification Project

🔗 [🧪 Click here to try the deployed app]("https://checkforbreastcancer.streamlit.app/")  

A machine learning project to classify whether a tumor is **Benign** or **Malignant** using real-world breast cancer data.

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📂 DATASET
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🔹 Source: `data.csv` from the Breast Cancer Wisconsin (Diagnostic) dataset  
🔹 Features: 30 numeric measurements per tumor (e.g., radius, texture, perimeter)  
🔹 Target: `diagnosis`  
        B → 0: Benign  
        M → 1: Malignant  

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🛠️ WORKFLOW
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1️⃣ Data Preprocessing  
  🔸 Dropped columns: `id`, `Unnamed: 32`  
  🔸 Label encoded `diagnosis`: M → 1, B → 0  
  🔸 Train-test split: 80% training, 20% testing  
  🔸 Feature scaling using `StandardScaler`  

2️⃣ Models Used  
  🧠 Logistic Regression  
  🤖 Support Vector Classifier (SVC) with linear kernel  

3️⃣ Evaluation  
  📊 Measured accuracy on both training and testing sets  
  🧪 Included support for custom input prediction  

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🧠 INTERACTIVE PREDICTION
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Users can enter **30 feature values** (comma or space-separated).  
These values are scaled and passed to both models, which return predictions.  

Model       Training Accuracy   Testing Accuracy  
🧠 Logistic Regression   ~99.5% ✅     ~96.5% ✅  
🤖 SVC (Linear Kernel)   ~98.9% ✅     ~98.2% ✅  

💡 NOTES  
  ✅ Feature scaling was **crucial**—especially for SVM performance  
  ✅ Dataset was **clean and well-balanced**, reducing preprocessing effort  
  ✅ Both models showed high accuracy → Effective class separation in feature space  

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📦 DEPLOYMENT
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
This project is deployed using **Streamlit** for an interactive web interface.  

🔗 Try it here: [https://checkforbreastcancer.streamlit.app/](https://checkforbreastcancer.streamlit.app/)  

🧾 How to Use:  
1. Open the app link  
2. Input 30 space-separated feature values  
3. Instantly receive tumor prediction: **Benign** or **Malignant**  

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🖥️ RUN LOCALLY
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
```bash
git clone https://github.com/amxn18/Breast-Cancer.git
pip install -r requirements.txt
streamlit run app.py
```
➡️ Input 30 features when prompted and get predictions from both models  

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📉 WHY NOT USE OUR CUSTOM SVM HERE?
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Although we built a custom SVM earlier, it was:

⚠️ Limited to linear kernels  
⚠️ No SMO (Sequential Minimal Optimization)  
⚠️ No vectorization  
⚠️ Lacked tolerance & convergence criteria  
⚠️ Did not optimize slack variables  

✅ Hence, **scikit-learn's SVC** significantly outperformed it on real datasets like this.  
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

